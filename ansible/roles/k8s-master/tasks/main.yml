---
# tasks file for k8s-master

- name: Add an apt signing key for Kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    mode: '0644'
    state: present
    filename: kubernetes.list

- name: Install Kubernetes binaries
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - kubelet 
      - kubeadm 
      - kubectl

- name: Add an apt signing key for Docker
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add apt repository for Docker and containerd stable version
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
    mode: '0644'
    state: present
    filename: docker.list

- name: Install containerd.io
  apt: 
    name: "containerd.io"
    state: present
    update_cache: yes

- name: Create a directory for containerd config
  file: path=/etc/containerd state=directory

- name: Get defaults from containerd.
  command: containerd config default
  register: containerd_config_default

- name: Write defaults to config.toml.
  copy:
    dest: /etc/containerd/config.toml
    mode: '0644'
    content: "{{ containerd_config_default.stdout }}"

- name: Restart containerd service
  service:
    name: containerd
    daemon_reload: yes
    state: restarted

- name: Restart kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted

- name: Initialize the Kubernetes cluster using kubeadm (calico)
  command: kubeadm init --apiserver-advertise-address="{{k8s_apiserver_ip}}" --apiserver-cert-extra-sans="{{k8s_apiserver_ip}}"  --node-name master1 --pod-network-cidr=192.168.0.0/16

- name: Setup kubeconfig for vagrant user
  command: "{{ item }}"
  with_items:
  - mkdir -p /home/vagrant/.kube
  - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
  - chown vagrant:vagrant /home/vagrant/.kube/config

- name: Setup kubeconfig for root
  command: "{{ item }}"
  with_items:
  - mkdir -p /root/.kube
  - cp -i /etc/kubernetes/admin.conf /root/.kube/config
  - chown root:root /root/.kube/config  

- name: Install calico pod network
  become: false
  command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

- name: Generate join command
  command: kubeadm token create --print-join-command
  register: join_command

- name: Copy join command to local file
  become: false
  local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

- name: Copy certificate
  copy:
    src: "{{playbook_dir}}/{{item}}/srvca.crt"
    dest: /tmp/srvca.crt
    owner: root
    group: root
    mode: '0644'
    backup: no
  with_items: "{{ cert_dir }}"

- name: Install k8s generic registry-ca
  become: false
  command: kubectl create secret generic registry-ca --namespace kube-system --from-file=registry-ca=/tmp/srvca.crt

- name: Install docker-ce
  apt: 
    name: "docker-ce"
    state: present
    update_cache: yes

- name: Add vagrant user to docker group
  user:
    name: vagrant
    groups: docker
    append: yes

- name: Add an apt signing key for Helm
  apt_key:
    url: https://baltocdn.com/helm/signing.asc
    state: present

- name: Add apt repository for Helm
  apt_repository:
    repo: deb [arch=amd64] https://baltocdn.com/helm/stable/debian/ all main
    mode: '0644'
    state: present
    filename: helm.list

- name: Install Helm
  apt: 
    name: helm
    state: present
    update_cache: yes

- name: Helm repo add (ingress-nginx)
  command: helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx

- name: Helm repo update
  command: helm repo update

- name: Copy ingressvalues
  copy:
    src: "{{playbook_dir}}/ingressvalues.yaml"
    dest: /tmp/ingressvalues.yaml
    owner: root
    group: root
    mode: '0666'
    backup: no

- name: Allow scheduling of pods on control-plane
  command: kubectl taint node master1 node-role.kubernetes.io/control-plane:NoSchedule-

- name: Allow scheduling of pods on master 
  command: kubectl taint node master1 node-role.kubernetes.io/master:NoSchedule-

#kubectl patch node master1 -p "{\"spec\":{\"unschedulable\":false}}"
#kubectl describe node | egrep -i taint
#kubectl run -it  busybox-$RANDOM --image=busybox --restart=Never -- date

- name: Install ingress-nginx (helm)
  command: helm upgrade --create-namespace --install ingress-nginx ingress-nginx --repo https://kubernetes.github.io/ingress-nginx --namespace ingress-nginx -f /tmp/ingressvalues.yaml --timeout 10m30s
  # command: helm upgrade --create-namespace --force --install ingress-nginx ingress-nginx/ingress-nginx -f /tmp/ingressvalues.yaml
#--wait 

